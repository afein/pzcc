; ModuleID = 'pzcc'

define i32 @hi2() {
entry:
  ret i32 8
}

define void @main() {
entry:
  %ok = alloca i32
  store i32 9, i32* %ok
  %no = alloca i32
  store i32 0, i32* %no
  %hi = alloca [3 x i32]
  %loadtmp = load i32* %no
  %eqtmp = icmp eq i32 %loadtmp, 8
  %loadtmp1 = load i32* %no
  %eqtmp2 = icmp eq i32 %loadtmp1, 4
  %andtmp = and i1 %eqtmp, %eqtmp2
  %geptmp = getelementptr [3 x i32]* %hi, i32 0, i32 2
  %loadtmp3 = load i32* %geptmp
  %eqtmp4 = icmp eq i32 %loadtmp3, 0
  %ortmp = or i1 %andtmp, %eqtmp4
  %ifcond = icmp ne i1 %ortmp, false
  br i1 %ifcond, label %then, label %else

then:                                             ; preds = %entry
  %loadtmp5 = load i32* %no
  %addtmp = add nsw i32 %loadtmp5, 0
  store i32 %addtmp, i32* %no
  br label %ifmerge

else:                                             ; preds = %entry
  %loadtmp6 = load i32* %no
  %addtmp7 = add nsw i32 %loadtmp6, 1
  store i32 %addtmp7, i32* %no
  br label %ifmerge

ifmerge:                                          ; preds = %else, %then
  %loadtmp8 = load i32* %no
  %subtmp = sub nsw i32 %loadtmp8, 1
  store i32 %subtmp, i32* %no
  ret void
}
