Syntax:
	improve error recovery

Semantics:
    signed operations handling?

IR:
    binops - signed operations
    unops
    array initializations and assignments
    constant expression assignments
    globals
    function declarations and calls
    statements

General:
    compiler arguments and llvm backend invocation

Done:
*	parser.y cleanup and polishing
*	refactor comp_lib	:: Done, moved to semantic
*	test forward function declarations
*	break is not error. it is statement. instead we must use contexts to check for constructs that use loops, so that we can assign value to break or continue statements
*	real constants : atof already converts between them
*	l_value++
*	return statement type checking
*	function calls
-	array sizes
*	refactor error reporting
*	substitute error.c functions for my_error
