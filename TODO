Syntax:
	improve error recovery

IR:
    array assignments uninitialized ? currently they throw garbage
    global variables
    statements:
        if, for, while, do..until, switch, WRITE, FORMAT
    function declarations and calls

General:
    compiler arguments and llvm backend invocation (build together?)

Done:
*   global constants
*   constant expression assignments
*   array initializations 
*   IR - assignments
*   IR - binops + signed operations
*   IR - unops
*   signed operations handling
*	parser.y cleanup and polishing
*	refactor comp_lib	:: Done, moved to semantic
*	test forward function declarations
*	break is not error. it is statement. instead we must use contexts to check for constructs that use loops, so that we can assign value to break or continue statements
*	real constants : atof already converts between them
*	l_value++
*	return statement type checking
*	function calls
-	array sizes
*	refactor error reporting
*	substitute error.c functions for my_error
